name: Vercel Deployment Check

on:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'package.json'
      - 'next.config.js'
      - 'vercel.json'

jobs:
  vercel-deployment:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript type checking
      run: npx tsc --noEmit
    
    - name: ESLint check
      run: npm run lint
    
    - name: Build test
      run: npm run build
    
    - name: Check Vercel configuration
      run: |
        # Check if vercel.json exists and is valid
        if [ -f "vercel.json" ]; then
          node -c vercel.json && echo "✓ vercel.json is valid"
        else
          echo "⚠ No vercel.json found (using Next.js defaults)"
        fi
    
    - name: Check Next.js configuration
      run: |
        # Check if next.config.js exists and is valid
        if [ -f "next.config.js" ]; then
          node -c next.config.js && echo "✓ next.config.js is valid"
        else
          echo "✗ next.config.js not found"
          exit 1
        fi
    
    - name: Check environment variables
      run: |
        # Check for required environment variables in code
        echo "Checking for environment variable usage..."
        
        if grep -r "process.env.NEXT_PUBLIC_MAPBOX_TOKEN" app/; then
          echo "✓ NEXT_PUBLIC_MAPBOX_TOKEN usage found"
        else
          echo "⚠ NEXT_PUBLIC_MAPBOX_TOKEN usage not found"
        fi
        
        if grep -r "process.env.SUPABASE_URL" app/; then
          echo "✓ SUPABASE_URL usage found"
        else
          echo "⚠ SUPABASE_URL usage not found"
        fi
        
        if grep -r "process.env.SUPABASE_ANON_KEY" app/; then
          echo "✓ SUPABASE_ANON_KEY usage found"
        else
          echo "⚠ SUPABASE_ANON_KEY usage not found"
        fi
    
    - name: Check API routes
      run: |
        # Verify API routes exist and are properly structured
        if [ -d "app/api" ]; then
          echo "✓ API routes directory exists"
          find app/api -name "route.ts" -type f | while read file; do
            echo "  - $file"
          done
        else
          echo "✗ API routes directory not found"
          exit 1
        fi
    
    - name: Check static assets
      run: |
        # Check for any large static assets that might cause issues
        echo "Checking static assets..."
        find . -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.gif" -o -name "*.svg" | while read file; do
          size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null || echo "0")
          if [ "$size" -gt 10485760 ]; then
            echo "⚠ Large file found: $file ($size bytes)"
          fi
        done 