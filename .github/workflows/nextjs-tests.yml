name: Next.js Application Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'app/**'
      - 'package.json'
      - 'next.config.*'
      - 'tailwind.config.*'
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  nextjs-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: TypeScript type checking
        run: npx tsc --noEmit

      - name: ESLint
        run: npm run lint

      - name: Check for unused dependencies
        run: |
          npx depcheck --json > depcheck-report.json || echo "depcheck completed (non-zero exit tolerated)"

      - name: Build (single run)
        env:
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.MAPBOX_TOKEN }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: npm run build

      - name: Test production build by starting server & probing
        env:
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.MAPBOX_TOKEN }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          PORT: 3000
        shell: bash
        run: |
          set -euo pipefail
          npm start & 
          SERVER_PID=$!
          trap "kill $SERVER_PID || true" EXIT

          # Wait for readiness (max 30s)
          for i in {1..30}; do
            if curl -fsS "http://localhost:3000" >/dev/null; then break; fi
            sleep 1
          done

          echo "✓ Homepage reachable"
          curl -fsS "http://localhost:3000/api/mapbox-token" >/dev/null && echo "✓ /api/mapbox-token reachable"

      - name: Check bundle size (from existing build)
        run: |
          if [ -d ".next" ]; then
            echo "✓ Next.js build exists"
            du -sh .next/ || true
          else
            echo "✗ .next/ missing after build"
            exit 1
          fi

      - name: Verify required environment variables are present
        env:
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.MAPBOX_TOKEN }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          set -euo pipefail
          : "${NEXT_PUBLIC_MAPBOX_TOKEN:?MAPBOX token missing}"
          : "${NEXT_PUBLIC_SUPABASE_URL:?Supabase URL missing}"
          : "${NEXT_PUBLIC_SUPABASE_ANON_KEY:?Supabase anon key missing}"
          echo "✓ Required env vars present"

      - name: Basic accessibility presence checks
        shell: bash
        run: |
          set -euo pipefail
          if grep -R --include="*.tsx" --include="*.jsx" \
                 --exclude-dir=node_modules --exclude-dir=.next --exclude-dir=dist --exclude-dir=out \
                 -n "alt=" app/ >/dev/null; then
            echo "✓ alt attributes present somewhere"
          else
            echo "⚠ No alt attributes found (heuristic)"
          fi

          if grep -R --include="*.tsx" --include="*.jsx" \
                 --exclude-dir=node_modules --exclude-dir=.next --exclude-dir=dist --exclude-dir=out \
                 -n "aria-label" app/ >/dev/null; then
            echo "✓ ARIA labels present somewhere"
          else
            echo "⚠ No aria-label found (heuristic)"
          fi

      - name: Basic performance smell checks
        shell: bash
        run: |
          set -euo pipefail
          # useEffect with empty deps (heuristic)
          if grep -R --include="*.tsx" --include="*.jsx" \
                 --exclude='*.test.*' --exclude='*.spec.*' --exclude='*.stories.*' \
                 --exclude-dir=node_modules --exclude-dir=.next --exclude-dir=dist --exclude-dir=out \
                 -n -E "useEffect\s*\(\s*[^,]*,\s*\[\s*\]\s*\)" app/ >/dev/null; then
            echo "⚠ useEffect([]) found"
          else
            echo "✓ No useEffect([]) instances detected"
          fi

          # console.* in non-test code
          if grep -R --include="*.tsx" --include="*.jsx" --include="*.ts" --include="*.js" \
                 --exclude='*.test.*' --exclude='*.spec.*' --exclude='*.stories.*' \
                 --exclude-dir=node_modules --exclude-dir=.next --exclude-dir=dist --exclude-dir=out \
                 -n -E "console\.(log|info|debug|warn|error)\(" app/ >/dev/null; then
            echo "⚠ console statements found in production sources"
          else
            echo "✓ No console statements in production sources"
          fi

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-test-reports
          path: depcheck-report.json
          retention-days: 7